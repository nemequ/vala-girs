/* libical-glib.vapi generated by vapigen, do not modify. */

[CCode (cprefix = "ICal", gir_namespace = "ICalGLib", gir_version = "3.0", lower_case_cprefix = "i_cal_")]
namespace ICal {
	namespace Memory {
		[CCode (cheader_filename = "libical-glib/libical-glib.h")]
		[Version (since = "1.0")]
		public static void add_tmp_buffer (owned void* buf);
		[CCode (cheader_filename = "libical-glib/libical-glib.h")]
		[Version (since = "1.0")]
		public static void append_char ([CCode (array_length_cname = "buf_size", array_length_pos = 2.5, array_length_type = "gsize")] ref char[] buf, [CCode (array_length = false)] ref char[] pos, char ch);
		[CCode (cheader_filename = "libical-glib/libical-glib.h")]
		[Version (since = "1.0")]
		public static void append_string ([CCode (array_length_cname = "buf_size", array_length_pos = 2.5, array_length_type = "gsize")] ref char[] buf, [CCode (array_length = false)] ref char[] pos, string str);
		[CCode (cheader_filename = "libical-glib/libical-glib.h")]
		[Version (since = "1.0")]
		public static void free_buffer (owned void* buf);
		[CCode (cheader_filename = "libical-glib/libical-glib.h")]
		[Version (since = "1.0")]
		public static void* new_buffer (size_t size);
		[CCode (cheader_filename = "libical-glib/libical-glib.h")]
		[Version (since = "1.0")]
		public static void* resize_buffer (owned void* buf, size_t size);
		[CCode (cheader_filename = "libical-glib/libical-glib.h")]
		[Version (since = "1.0")]
		public static string strdup (string s);
		[CCode (cheader_filename = "libical-glib/libical-glib.h")]
		[Version (since = "1.0")]
		public static void* tmp_buffer (size_t size);
		[CCode (cheader_filename = "libical-glib/libical-glib.h")]
		[Version (since = "1.0")]
		public static string tmp_copy (string str);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_array_get_type ()")]
	public sealed class Array : ICal.Object {
		[CCode (has_construct_function = false)]
		protected Array ();
		[CCode (cname = "i_cal_timezone_array_append_from_vtimezone")]
		[Version (since = "1.0")]
		public void append_timezone_from_vtimezone (ICal.Component child);
		[Version (since = "1.0")]
		public ICal.Array copy ();
		[Version (since = "1.0")]
		public void remove_element_at (int position);
		[Version (since = "1.0")]
		public int size ();
		[CCode (cname = "i_cal_timezone_array_new", has_construct_function = false)]
		[Version (since = "1.0")]
		public Array.timezone ();
		[CCode (cname = "i_cal_timezone_array_element_at")]
		[Version (since = "1.0")]
		public ICal.Timezone timezone_element_at (uint index);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_attach_get_type ()")]
	public sealed class Attach : ICal.Object {
		[CCode (has_construct_function = false)]
		protected Attach ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Attach.from_bytes (owned GLib.Bytes bytes);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Attach.from_data (string data, GLib.Func? free_fn);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Attach.from_url (string url);
		[Version (since = "1.0")]
		public unowned string? get_data ();
		[Version (since = "1.0")]
		public bool get_is_url ();
		[Version (since = "1.0")]
		public unowned string? get_url ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_comp_iter_get_type ()")]
	public sealed class CompIter : ICal.Object {
		[CCode (has_construct_function = false)]
		protected CompIter ();
		[Version (since = "1.0")]
		public ICal.Component deref ();
		[Version (since = "1.0")]
		public ICal.Component next ();
		[Version (since = "1.0")]
		public ICal.Component prior ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_component_get_type ()")]
	public sealed class Component : ICal.Object {
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component (ICal.ComponentKind kind);
		[Version (since = "1.0")]
		public void add_component (ICal.Component child);
		[Version (since = "1.0")]
		public void add_property (ICal.Property property);
		[Version (since = "1.0")]
		public string as_ical_string ();
		[Version (since = "1.0")]
		public ICal.CompIter begin_component (ICal.ComponentKind kind);
		[Version (since = "1.0")]
		public int check_restrictions ();
		[Version (since = "1.0")]
		public ICal.Component clone ();
		[Version (since = "1.0")]
		public void convert_errors ();
		[Version (since = "1.0")]
		public int count_components (ICal.ComponentKind kind);
		[Version (since = "1.0")]
		public int count_errors ();
		[Version (since = "1.0")]
		public int count_properties (ICal.PropertyKind kind);
		[Version (since = "1.0")]
		public ICal.CompIter end_component (ICal.ComponentKind kind);
		[Version (since = "3.0.5")]
		public void foreach_recurrence (ICal.Time start, ICal.Time end, ICal.ComponentForeachRecurrenceFunc? callback);
		[Version (since = "3.0.5")]
		public void foreach_tzid (ICal.ComponentForeachTZIDFunc? callback);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.from_string (string str);
		[Version (since = "1.0")]
		public unowned string get_comment ();
		[Version (since = "1.0")]
		public ICal.Component get_current_component ();
		[Version (since = "1.0")]
		public ICal.Property get_current_property ();
		[Version (since = "1.0")]
		public unowned string get_description ();
		[Version (since = "1.0")]
		public ICal.Time get_dtend ();
		[Version (since = "1.0")]
		public ICal.Time get_dtstamp ();
		[Version (since = "1.0")]
		public ICal.Time get_dtstart ();
		[Version (since = "1.0")]
		public ICal.Time get_due ();
		[Version (since = "1.0")]
		public ICal.Duration get_duration ();
		[Version (since = "1.0")]
		public ICal.Component? get_first_component (ICal.ComponentKind kind);
		[Version (since = "1.0")]
		public ICal.Property? get_first_property (ICal.PropertyKind kind);
		[Version (since = "1.0")]
		public ICal.Component get_first_real_component ();
		[Version (since = "1.0")]
		public ICal.Component? get_inner ();
		[Version (since = "1.0")]
		public unowned string get_location ();
		[Version (since = "1.0")]
		public ICal.PropertyMethod get_method ();
		[Version (since = "1.0")]
		public ICal.Component? get_next_component (ICal.ComponentKind kind);
		[Version (since = "1.0")]
		public ICal.Property? get_next_property (ICal.PropertyKind kind);
		[Version (since = "3.0")]
		public ICal.Component? get_parent ();
		[Version (since = "1.0")]
		public ICal.Time get_recurrenceid ();
		[Version (since = "1.0")]
		public unowned string get_relcalid ();
		[Version (since = "1.0")]
		public int get_sequence ();
		[Version (since = "1.0")]
		public ICal.TimeSpan get_span ();
		[Version (since = "1.0")]
		public ICal.PropertyStatus get_status ();
		[Version (since = "1.0")]
		public unowned string get_summary ();
		[Version (since = "1.0")]
		public ICal.Timezone? get_timezone (string tzid);
		[Version (since = "1.0")]
		public unowned string get_uid ();
		[Version (since = "1.0")]
		public bool is_valid ();
		[Version (since = "1.0")]
		public ICal.ComponentKind isa ();
		[Version (since = "1.0")]
		public int isa_component ();
		[Version (since = "1.0")]
		public void merge_component (ICal.Component comp_to_merge);
		[Version (since = "1.0")]
		public void remove_component (ICal.Component child);
		[Version (since = "1.0")]
		public void remove_property (ICal.Property property);
		[Version (since = "1.0")]
		public void set_comment (string v);
		[Version (since = "1.0")]
		public void set_description (string v);
		[Version (since = "1.0")]
		public void set_dtend (ICal.Time v);
		[Version (since = "1.0")]
		public void set_dtstamp (ICal.Time v);
		[Version (since = "1.0")]
		public void set_dtstart (ICal.Time v);
		[Version (since = "1.0")]
		public void set_due (ICal.Time v);
		[Version (since = "1.0")]
		public void set_duration (ICal.Duration v);
		[Version (since = "1.0")]
		public void set_location (string v);
		[Version (since = "1.0")]
		public void set_method (ICal.PropertyMethod method);
		[Version (since = "3.0")]
		public void set_parent (ICal.Component? parent);
		[Version (since = "1.0")]
		public void set_recurrenceid (ICal.Time v);
		[Version (since = "1.0")]
		public void set_relcalid (string v);
		[Version (since = "1.0")]
		public void set_sequence (int v);
		[Version (since = "1.0")]
		public void set_status (ICal.PropertyStatus status);
		[Version (since = "1.0")]
		public void set_summary (string v);
		[Version (since = "1.0")]
		public void set_uid (string v);
		[Version (since = "1.0")]
		public void strip_errors ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.vagenda ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.valarm ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.vavailability ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.vcalendar ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.vevent ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.vfreebusy ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.vjournal ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.vpoll ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.vquery ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.vtimezone ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.vtodo ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.vvoter ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.x (string x_name);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.xavailable ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.xdaylight ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.xstandard ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Component.xvote ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_datetimeperiod_get_type ()")]
	public sealed class Datetimeperiod : ICal.Object {
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Datetimeperiod ();
		[Version (since = "1.0")]
		public ICal.Period get_period ();
		[Version (since = "1.0")]
		public ICal.Time get_time ();
		[Version (since = "1.0")]
		public void set_period (ICal.Period period);
		[Version (since = "1.0")]
		public void set_time (ICal.Time time);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_duration_get_type ()")]
	public sealed class Duration : ICal.Object {
		[CCode (has_construct_function = false)]
		protected Duration ();
		[Version (since = "1.0")]
		public string as_ical_string ();
		[Version (since = "1.0")]
		public int as_int ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Duration.bad_duration ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Duration.from_int (int t);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Duration.from_string (string str);
		[Version (since = "1.0")]
		public uint get_days ();
		[Version (since = "1.0")]
		public uint get_hours ();
		[Version (since = "1.0")]
		public uint get_minutes ();
		[Version (since = "1.0")]
		public uint get_seconds ();
		[Version (since = "1.0")]
		public uint get_weeks ();
		[Version (since = "1.0")]
		public bool is_bad_duration ();
		[Version (since = "1.0")]
		public bool is_neg ();
		[Version (since = "1.0")]
		public bool is_null_duration ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Duration.null_duration ();
		[Version (since = "1.0")]
		public void set_days (uint days);
		[Version (since = "1.0")]
		public void set_hours (uint hours);
		[Version (since = "1.0")]
		public void set_is_neg (bool is_neg);
		[Version (since = "1.0")]
		public void set_minutes (uint minutes);
		[Version (since = "1.0")]
		public void set_seconds (uint seconds);
		[Version (since = "1.0")]
		public void set_weeks (uint weeks);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_geo_get_type ()")]
	public sealed class Geo : ICal.Object {
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Geo (double lat, double lon);
		[Version (since = "1.0")]
		public ICal.Geo clone ();
		[Version (since = "1.0")]
		public double get_lat ();
		[Version (since = "1.0")]
		public double get_lon ();
		[Version (since = "1.0")]
		public void set_lat (double lat);
		[Version (since = "1.0")]
		public void set_lon (double lon);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_object_get_type ()")]
	public abstract class Object : GLib.Object {
		[CCode (has_construct_function = false)]
		protected Object ();
		[Version (since = "1.0")]
		public void add_depender (GLib.Object depender);
		[Version (since = "3.0.5")]
		public static void free_global_objects ();
		[Version (since = "3.0.11")]
		public bool get_always_destroy ();
		[Version (since = "1.0")]
		public bool get_is_global_memory ();
		[Version (since = "1.0")]
		public GLib.Object? ref_owner ();
		[Version (since = "1.0")]
		public void remove_depender (GLib.Object depender);
		[Version (since = "1.0")]
		public void remove_owner ();
		[Version (since = "3.0.11")]
		public void set_always_destroy (bool value);
		[Version (since = "1.0")]
		public void set_native_destroy_func (GLib.DestroyNotify native_destroy_func);
		[Version (since = "1.0")]
		public void set_owner (GLib.Object owner);
		[Version (since = "1.0")]
		public void* steal_native ();
		[Version (since = "3.0.11")]
		public bool always_destroy { get; set; }
		public bool is_global_memory { get; construct; }
		[NoAccessorMethod]
		public void* native { get; construct; }
		[NoAccessorMethod]
		public void* native_destroy_func { get; set; }
		[NoAccessorMethod]
		public GLib.Object owner { owned get; set; }
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_parameter_get_type ()")]
	public sealed class Parameter : ICal.Object {
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter (ICal.ParameterKind v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.actionparam (ICal.ParameterAction v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.altrep (string v);
		[Version (since = "1.0")]
		public string as_ical_string ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.charset (string v);
		[Version (since = "1.0")]
		public ICal.Parameter clone ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.cn (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.cutype (ICal.ParameterCutype v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.delegatedfrom (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.delegatedto (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.dir (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "3.0.15")]
		public Parameter.display (ICal.ParameterDisplay value);
		[CCode (has_construct_function = false)]
		[Version (since = "3.0.15")]
		public Parameter.email (string value);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.enable (ICal.ParameterEnable v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.encoding (ICal.ParameterEncoding v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.fbtype (ICal.ParameterFbtype v);
		[CCode (has_construct_function = false)]
		[Version (since = "3.0.15")]
		public Parameter.feature (ICal.ParameterFeature value);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Parameter.filename (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.fmttype (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.from_string (string value);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.from_value_string (ICal.ParameterKind kind, string value);
		[Version (since = "1.0")]
		public ICal.ParameterAction get_actionparam ();
		[Version (since = "1.0")]
		public unowned string? get_altrep ();
		[Version (since = "1.0")]
		public unowned string? get_charset ();
		[Version (since = "1.0")]
		public unowned string? get_cn ();
		[Version (since = "1.0")]
		public unowned ICal.ParameterCutype? get_cutype ();
		[Version (since = "1.0")]
		public unowned string? get_delegatedfrom ();
		[Version (since = "1.0")]
		public unowned string? get_delegatedto ();
		[Version (since = "1.0")]
		public unowned string? get_dir ();
		[Version (since = "3.0.15")]
		public ICal.ParameterDisplay get_display ();
		[Version (since = "3.0.15")]
		public unowned string? get_email ();
		[Version (since = "1.0")]
		public ICal.ParameterEnable get_enable ();
		[Version (since = "1.0")]
		public ICal.ParameterEncoding get_encoding ();
		[Version (since = "1.0")]
		public ICal.ParameterFbtype get_fbtype ();
		[Version (since = "3.0.15")]
		public ICal.ParameterFeature get_feature ();
		[Version (since = "2.0")]
		public unowned string? get_filename ();
		[Version (since = "1.0")]
		public unowned string? get_fmttype ();
		[Version (since = "1.0")]
		public unowned string? get_iana ();
		[Version (since = "1.0")]
		public unowned string? get_iana_name ();
		[Version (since = "1.0")]
		public unowned string? get_iana_value ();
		[Version (since = "1.0")]
		public unowned string? get_id ();
		[Version (since = "3.0.15")]
		public unowned string? get_label ();
		[Version (since = "1.0")]
		public unowned string? get_language ();
		[Version (since = "1.0")]
		public unowned string? get_latency ();
		[Version (since = "1.0")]
		public ICal.ParameterLocal get_local ();
		[Version (since = "1.0")]
		public unowned string? get_localize ();
		[Version (since = "2.0")]
		public unowned string? get_managedid ();
		[Version (since = "1.0")]
		public unowned string? get_member ();
		[Version (since = "2.0")]
		public unowned string? get_modified ();
		[Version (since = "1.0")]
		public unowned string? get_options ();
		[Version (since = "3.0")]
		public ICal.Property? get_parent ();
		[Version (since = "1.0")]
		public ICal.ParameterPartstat get_partstat ();
		[Version (since = "3.0.15")]
		public ICal.ParameterPatchaction get_patchaction ();
		[Version (since = "2.0")]
		public unowned string? get_publiccomment ();
		[Version (since = "1.0")]
		public ICal.ParameterRange get_range ();
		[Version (since = "2.0")]
		public unowned string? get_reason ();
		[Version (since = "1.0")]
		public ICal.ParameterRelated get_related ();
		[Version (since = "1.0")]
		public ICal.ParameterReltype get_reltype ();
		[Version (since = "2.0")]
		public ICal.ParameterRequired get_required ();
		[Version (since = "2.0")]
		public int get_response ();
		[Version (since = "1.0")]
		public ICal.ParameterRole get_role ();
		[Version (since = "1.0")]
		public ICal.ParameterRsvp get_rsvp ();
		[Version (since = "1.0")]
		public ICal.ParameterScheduleagent get_scheduleagent ();
		[Version (since = "1.0")]
		public ICal.ParameterScheduleforcesend get_scheduleforcesend ();
		[Version (since = "1.0")]
		public unowned string? get_schedulestatus ();
		[Version (since = "1.0")]
		public unowned string? get_sentby ();
		[Version (since = "2.0")]
		public unowned string? get_size ();
		[Version (since = "2.0")]
		public ICal.ParameterStayinformed get_stayinformed ();
		[Version (since = "1.0")]
		public ICal.ParameterSubstate get_substate ();
		[Version (since = "1.0")]
		public unowned string? get_tzid ();
		[Version (since = "1.0")]
		public ICal.ParameterValue get_value ();
		[Version (since = "1.0")]
		public unowned string? get_x ();
		[Version (since = "1.0")]
		public ICal.ParameterXliccomparetype get_xliccomparetype ();
		[Version (since = "1.0")]
		public ICal.ParameterXlicerrortype get_xlicerrortype ();
		[Version (since = "1.0")]
		public unowned string? get_xname ();
		[Version (since = "1.0")]
		public unowned string? get_xvalue ();
		[Version (since = "1.0")]
		public int has_same_name (ICal.Parameter param2);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.iana (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.id (string v);
		[Version (since = "1.0")]
		public ICal.ParameterKind isa ();
		[Version (since = "1.0")]
		public int isa_parameter ();
		[CCode (has_construct_function = false)]
		[Version (since = "3.0.15")]
		public Parameter.label (string value);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.language (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.latency (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.local (ICal.ParameterLocal v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.localize (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Parameter.managedid (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.member (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Parameter.modified (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.options (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.partstat (ICal.ParameterPartstat v);
		[CCode (has_construct_function = false)]
		[Version (since = "3.0.15")]
		public Parameter.patchaction (ICal.ParameterPatchaction value);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Parameter.publiccomment (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.range (ICal.ParameterRange v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Parameter.reason (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.related (ICal.ParameterRelated v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.reltype (ICal.ParameterReltype v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Parameter.required (ICal.ParameterRequired v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Parameter.response (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.role (ICal.ParameterRole v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.rsvp (ICal.ParameterRsvp v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.scheduleagent (ICal.ParameterScheduleagent v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.scheduleforcesend (ICal.ParameterScheduleforcesend v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.schedulestatus (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.sentby (string v);
		[Version (since = "1.0")]
		public void set_actionparam (ICal.ParameterAction v);
		[Version (since = "1.0")]
		public void set_altrep (string v);
		[Version (since = "1.0")]
		public void set_charset (string v);
		[Version (since = "1.0")]
		public void set_cn (string v);
		[Version (since = "1.0")]
		public void set_cutype (ICal.ParameterCutype v);
		[Version (since = "1.0")]
		public void set_delegatedfrom (string v);
		[Version (since = "1.0")]
		public void set_delegatedto (string v);
		[Version (since = "1.0")]
		public void set_dir (string v);
		[Version (since = "3.0.15")]
		public void set_display (ICal.ParameterDisplay value);
		[Version (since = "3.0.15")]
		public void set_email (string value);
		[Version (since = "1.0")]
		public void set_enable (ICal.ParameterEnable v);
		[Version (since = "1.0")]
		public void set_encoding (ICal.ParameterEncoding v);
		[Version (since = "1.0")]
		public void set_fbtype (ICal.ParameterFbtype v);
		[Version (since = "3.0.15")]
		public void set_feature (ICal.ParameterFeature value);
		[Version (since = "2.0")]
		public void set_filename (string v);
		[Version (since = "1.0")]
		public void set_fmttype (string v);
		[Version (since = "1.0")]
		public void set_iana (string v);
		[Version (since = "1.0")]
		public void set_iana_name (string v);
		[Version (since = "1.0")]
		public void set_iana_value (string v);
		[Version (since = "1.0")]
		public void set_id (string v);
		[Version (since = "3.0.15")]
		public void set_label (string value);
		[Version (since = "1.0")]
		public void set_language (string v);
		[Version (since = "1.0")]
		public void set_latency (string v);
		[Version (since = "1.0")]
		public void set_local (ICal.ParameterLocal v);
		[Version (since = "1.0")]
		public void set_localize (string v);
		[Version (since = "2.0")]
		public void set_managedid (string v);
		[Version (since = "1.0")]
		public void set_member (string v);
		[Version (since = "2.0")]
		public void set_modified (string v);
		[Version (since = "1.0")]
		public void set_options (string v);
		[Version (since = "3.0")]
		public void set_parent (ICal.Property? property);
		[Version (since = "1.0")]
		public void set_partstat (ICal.ParameterPartstat v);
		[Version (since = "3.0.15")]
		public void set_patchaction (ICal.ParameterPatchaction value);
		[Version (since = "2.0")]
		public void set_publiccomment (string v);
		[Version (since = "1.0")]
		public void set_range (ICal.ParameterRange v);
		[Version (since = "2.0")]
		public void set_reason (string v);
		[Version (since = "1.0")]
		public void set_related (ICal.ParameterRelated v);
		[Version (since = "1.0")]
		public void set_reltype (ICal.ParameterReltype v);
		[Version (since = "2.0")]
		public void set_required (ICal.ParameterRequired v);
		[Version (since = "2.0")]
		public void set_response (int v);
		[Version (since = "1.0")]
		public void set_role (ICal.ParameterRole v);
		[Version (since = "1.0")]
		public void set_rsvp (ICal.ParameterRsvp v);
		[Version (since = "1.0")]
		public void set_scheduleagent (ICal.ParameterScheduleagent v);
		[Version (since = "1.0")]
		public void set_scheduleforcesend (ICal.ParameterScheduleforcesend v);
		[Version (since = "1.0")]
		public void set_schedulestatus (string v);
		[Version (since = "1.0")]
		public void set_sentby (string v);
		[Version (since = "2.0")]
		public void set_size (string v);
		[Version (since = "2.0")]
		public void set_stayinformed (ICal.ParameterStayinformed v);
		[Version (since = "1.0")]
		public void set_substate (ICal.ParameterSubstate v);
		[Version (since = "1.0")]
		public void set_tzid (string v);
		[Version (since = "1.0")]
		public void set_value (ICal.ParameterValue v);
		[Version (since = "1.0")]
		public void set_x (string v);
		[Version (since = "1.0")]
		public void set_xliccomparetype (ICal.ParameterXliccomparetype v);
		[Version (since = "1.0")]
		public void set_xlicerrortype (ICal.ParameterXlicerrortype v);
		[Version (since = "1.0")]
		public void set_xname (string v);
		[Version (since = "1.0")]
		public void set_xvalue (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Parameter.size (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Parameter.stayinformed (ICal.ParameterStayinformed v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.substate (ICal.ParameterSubstate v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.tzid (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.value (ICal.ParameterValue v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.x (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.xliccomparetype (ICal.ParameterXliccomparetype v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parameter.xlicerrortype (ICal.ParameterXlicerrortype v);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_parser_get_type ()")]
	public sealed class Parser : ICal.Object {
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Parser ();
		[DestroysInstance]
		[Version (since = "1.0")]
		public ICal.Component? add_line (string? str);
		[Version (since = "1.0")]
		public ICal.Component? clean ();
		[Version (since = "1.0")]
		public void free ();
		[Version (since = "1.0")]
		public string get_line (ICal.ParserLineGenFunc func);
		[Version (since = "1.0")]
		public ICal.ParserState get_state ();
		[Version (since = "1.0")]
		public ICal.Component parse (ICal.ParserLineGenFunc func);
		[Version (since = "1.0")]
		public static ICal.Component parse_string (string str);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_period_get_type ()")]
	public sealed class Period : ICal.Object {
		[CCode (has_construct_function = false)]
		protected Period ();
		[Version (since = "1.0")]
		public string as_ical_string ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Period.from_string (string str);
		[Version (since = "1.0")]
		public ICal.Duration get_duration ();
		[Version (since = "1.0")]
		public ICal.Time get_end ();
		[Version (since = "1.0")]
		public ICal.Time get_start ();
		[Version (since = "1.0")]
		public bool is_null_period ();
		[Version (since = "1.0")]
		public bool is_valid_period ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Period.null_period ();
		[Version (since = "1.0")]
		public void set_duration (ICal.Duration duration);
		[Version (since = "1.0")]
		public void set_end (ICal.Time end);
		[Version (since = "1.0")]
		public void set_start (ICal.Time start);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_property_get_type ()")]
	public sealed class Property : ICal.Object {
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property (ICal.PropertyKind kind);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Property.acceptresponse (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.acknowledged (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.action (ICal.PropertyAction v);
		[Version (since = "1.0")]
		public void add_parameter (ICal.Parameter parameter);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.allowconflict (string v);
		[Version (since = "1.0")]
		public string as_ical_string ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.attach (ICal.Attach v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.attendee (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Property.busytype (ICal.PropertyBusytype v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.calid (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.calmaster (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.calscale (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.capversion (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.carid (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.carlevel (ICal.PropertyCarlevel v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.categories (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.@class (ICal.Property_Class v);
		[Version (since = "1.0")]
		public ICal.Property clone ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.cmd (ICal.PropertyCmd v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.color (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.comment (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.completed (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.components (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.contact (string v);
		[Version (since = "1.0")]
		public int count_parameters ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.created (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.csid (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.datemax (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.datemin (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.decreed (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.defaultcharset (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.defaultlocale (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.defaulttzid (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.defaultvcars (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.deny (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.description (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.dtend (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.dtstamp (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.dtstart (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.due (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.duration (ICal.Duration v);
		[Version (since = "1.0")]
		public static string enum_to_string (int e);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.estimatedduration (ICal.Duration v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.exdate (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.expand (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.exrule (ICal.Recurrence v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.freebusy (ICal.Period v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.from_string (string str);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.geo (ICal.Geo v);
		[Version (since = "2.0")]
		public unowned string get_acceptresponse ();
		[Version (since = "1.0")]
		public ICal.Time get_acknowledged ();
		[Version (since = "1.0")]
		public ICal.PropertyAction get_action ();
		[Version (since = "1.0")]
		public unowned string get_allowconflict ();
		[Version (since = "1.0")]
		public ICal.Attach get_attach ();
		[Version (since = "1.0")]
		public unowned string get_attendee ();
		[Version (since = "2.0")]
		public ICal.PropertyBusytype get_busytype ();
		[Version (since = "1.0")]
		public unowned string get_calid ();
		[Version (since = "1.0")]
		public unowned string get_calmaster ();
		[Version (since = "1.0")]
		public unowned string get_calscale ();
		[Version (since = "1.0")]
		public unowned string get_capversion ();
		[Version (since = "1.0")]
		public unowned string get_carid ();
		[Version (since = "1.0")]
		public ICal.PropertyCarlevel get_carlevel ();
		[Version (since = "1.0")]
		public unowned string get_categories ();
		[Version (since = "1.0")]
		public ICal.Property_Class get_class ();
		[Version (since = "1.0")]
		public ICal.PropertyCmd get_cmd ();
		[Version (since = "3.0.5")]
		public unowned string get_color ();
		[Version (since = "1.0")]
		public unowned string get_comment ();
		[Version (since = "1.0")]
		public ICal.Time get_completed ();
		[Version (since = "1.0")]
		public unowned string get_components ();
		[Version (since = "1.0")]
		public unowned string get_contact ();
		[Version (since = "1.0")]
		public ICal.Time get_created ();
		[Version (since = "1.0")]
		public unowned string get_csid ();
		[Version (since = "1.0")]
		public ICal.Time get_datemax ();
		[Version (since = "1.0")]
		public ICal.Time get_datemin ();
		[Version (since = "3.0.5")]
		public ICal.Time get_datetime_with_component (ICal.Component? comp);
		[Version (since = "1.0")]
		public unowned string get_decreed ();
		[Version (since = "1.0")]
		public unowned string get_defaultcharset ();
		[Version (since = "1.0")]
		public unowned string get_defaultlocale ();
		[Version (since = "1.0")]
		public unowned string get_defaulttzid ();
		[Version (since = "1.0")]
		public unowned string get_defaultvcars ();
		[Version (since = "1.0")]
		public unowned string get_deny ();
		[Version (since = "1.0")]
		public unowned string get_description ();
		[Version (since = "1.0")]
		public ICal.Time get_dtend ();
		[Version (since = "1.0")]
		public ICal.Time get_dtstamp ();
		[Version (since = "1.0")]
		public ICal.Time get_dtstart ();
		[Version (since = "1.0")]
		public ICal.Time get_due ();
		[Version (since = "1.0")]
		public ICal.Duration get_duration ();
		[Version (since = "1.0")]
		public ICal.Duration get_estimatedduration ();
		[Version (since = "1.0")]
		public ICal.Time get_exdate ();
		[Version (since = "1.0")]
		public int get_expand ();
		[Version (since = "1.0")]
		public ICal.Recurrence get_exrule ();
		[Version (since = "1.0")]
		public ICal.Parameter get_first_parameter (ICal.ParameterKind kind);
		[Version (since = "1.0")]
		public ICal.Period get_freebusy ();
		[Version (since = "1.0")]
		public ICal.Geo get_geo ();
		[Version (since = "1.0")]
		public unowned string get_grant ();
		[Version (since = "1.0")]
		public unowned string get_itipversion ();
		[Version (since = "1.0")]
		public ICal.Time get_lastmodified ();
		[Version (since = "1.0")]
		public unowned string get_location ();
		[Version (since = "1.0")]
		public int get_maxcomponentsize ();
		[Version (since = "1.0")]
		public ICal.Time get_maxdate ();
		[Version (since = "1.0")]
		public int get_maxresults ();
		[Version (since = "1.0")]
		public int get_maxresultssize ();
		[Version (since = "1.0")]
		public ICal.PropertyMethod get_method ();
		[Version (since = "1.0")]
		public ICal.Time get_mindate ();
		[Version (since = "1.0")]
		public unowned string get_multipart ();
		[Version (since = "1.0")]
		public unowned string get_name ();
		[Version (since = "1.0")]
		public ICal.Parameter get_next_parameter (ICal.ParameterKind kind);
		[Version (since = "1.0")]
		public unowned string get_organizer ();
		[Version (since = "1.0")]
		public unowned string get_owner ();
		[Version (since = "1.0")]
		public string get_parameter_as_string (string name);
		[Version (since = "2.0")]
		public ICal.Component? get_parent ();
		[Version (since = "1.0")]
		public int get_percentcomplete ();
		[Version (since = "1.0")]
		public unowned string get_permission ();
		[Version (since = "1.0")]
		public ICal.PropertyPollcompletion get_pollcompletion ();
		[Version (since = "1.0")]
		public int get_pollitemid ();
		[Version (since = "1.0")]
		public ICal.PropertyPollmode get_pollmode ();
		[Version (since = "1.0")]
		public unowned string get_pollproperties ();
		[Version (since = "1.0")]
		public int get_pollwinner ();
		[Version (since = "1.0")]
		public int get_priority ();
		[Version (since = "1.0")]
		public unowned string get_prodid ();
		[Version (since = "1.0")]
		public string get_property_name ();
		[Version (since = "1.0")]
		public unowned string get_query ();
		[Version (since = "1.0")]
		public unowned string get_queryid ();
		[Version (since = "1.0")]
		public ICal.PropertyQuerylevel get_querylevel ();
		[Version (since = "1.0")]
		public unowned string get_queryname ();
		[Version (since = "1.0")]
		public ICal.Datetimeperiod get_rdate ();
		[Version (since = "1.0")]
		public unowned string get_recuraccepted ();
		[Version (since = "1.0")]
		public unowned string get_recurexpand ();
		[Version (since = "1.0")]
		public unowned string get_recurlimit ();
		[Version (since = "1.0")]
		public ICal.Time get_recurrenceid ();
		[Version (since = "1.0")]
		public unowned string get_relatedto ();
		[Version (since = "1.0")]
		public unowned string get_relcalid ();
		[Version (since = "1.0")]
		public int get_repeat ();
		[Version (since = "2.0")]
		public unowned string get_replyurl ();
		[Version (since = "1.0")]
		public ICal.Reqstat get_requeststatus ();
		[Version (since = "1.0")]
		public unowned string get_resources ();
		[Version (since = "2.0")]
		public int get_response ();
		[Version (since = "1.0")]
		public unowned string get_restriction ();
		[Version (since = "1.0")]
		public ICal.Recurrence get_rrule ();
		[Version (since = "1.0")]
		public unowned string get_scope ();
		[Version (since = "1.0")]
		public int get_sequence ();
		[Version (since = "1.0")]
		public ICal.PropertyStatus get_status ();
		[Version (since = "1.0")]
		public unowned string get_storesexpanded ();
		[Version (since = "1.0")]
		public unowned string get_summary ();
		[Version (since = "1.0")]
		public unowned string get_target ();
		[Version (since = "2.0")]
		public ICal.PropertyTaskmode get_taskmode ();
		[Version (since = "1.0")]
		public ICal.PropertyTransp get_transp ();
		[Version (since = "1.0")]
		public ICal.Trigger get_trigger ();
		[Version (since = "1.0")]
		public unowned string get_tzid ();
		[Version (since = "2.0")]
		public unowned string get_tzidaliasof ();
		[Version (since = "1.0")]
		public unowned string get_tzname ();
		[Version (since = "1.0")]
		public int get_tzoffsetfrom ();
		[Version (since = "1.0")]
		public int get_tzoffsetto ();
		[Version (since = "2.0")]
		public ICal.Time get_tzuntil ();
		[Version (since = "1.0")]
		public unowned string get_tzurl ();
		[Version (since = "1.0")]
		public unowned string get_uid ();
		[Version (since = "1.0")]
		public unowned string get_url ();
		[Version (since = "1.0")]
		public ICal.Value get_value ();
		[Version (since = "1.0")]
		public string get_value_as_string ();
		[Version (since = "1.0")]
		public unowned string get_version ();
		[Version (since = "2.0")]
		public unowned string get_voter ();
		[Version (since = "1.0")]
		public unowned string get_x ();
		[Version (since = "1.0")]
		public unowned string? get_x_name ();
		[Version (since = "1.0")]
		public ICal.PropertyXlicclass get_xlicclass ();
		[Version (since = "1.0")]
		public unowned string get_xlicclustercount ();
		[Version (since = "1.0")]
		public unowned string get_xlicerror ();
		[Version (since = "1.0")]
		public unowned string get_xlicmimecharset ();
		[Version (since = "1.0")]
		public unowned string get_xlicmimecid ();
		[Version (since = "1.0")]
		public unowned string get_xlicmimecontenttype ();
		[Version (since = "1.0")]
		public unowned string get_xlicmimeencoding ();
		[Version (since = "1.0")]
		public unowned string get_xlicmimefilename ();
		[Version (since = "1.0")]
		public unowned string get_xlicmimeoptinfo ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.grant (string v);
		[Version (since = "1.0")]
		public ICal.PropertyKind isa ();
		[Version (since = "1.0")]
		public int isa_property ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.itipversion (string v);
		[Version (since = "1.0")]
		public static int kind_and_string_to_enum (int kind, string str);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.lastmodified (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.location (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.maxcomponentsize (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.maxdate (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.maxresults (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.maxresultssize (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.method (ICal.PropertyMethod v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.mindate (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.multipart (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.name (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.organizer (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.owner (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.percentcomplete (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.permission (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.pollcompletion (ICal.PropertyPollcompletion v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.pollitemid (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.pollmode (ICal.PropertyPollmode v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.pollproperties (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.pollwinner (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.priority (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.prodid (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.query (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.queryid (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.querylevel (ICal.PropertyQuerylevel v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.queryname (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.rdate (ICal.Datetimeperiod v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.recuraccepted (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.recurexpand (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.recurlimit (string v);
		[Version (since = "1.0")]
		public static bool recurrence_is_excluded (ICal.Component comp, ICal.Time dtstart, ICal.Time recurtime);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.recurrenceid (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.relatedto (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.relcalid (string v);
		[Version (since = "1.0")]
		public void remove_parameter_by_kind (ICal.ParameterKind kind);
		[Version (since = "1.0")]
		public void remove_parameter_by_name (string name);
		[Version (since = "1.0")]
		public void remove_parameter_by_ref (ICal.Parameter param);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.repeat (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Property.replyurl (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.requeststatus (ICal.Reqstat v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.resources (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Property.response (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.restriction (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.rrule (ICal.Recurrence v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.scope (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.sequence (int v);
		[Version (since = "2.0")]
		public void set_acceptresponse (string v);
		[Version (since = "1.0")]
		public void set_acknowledged (ICal.Time v);
		[Version (since = "1.0")]
		public void set_action (ICal.PropertyAction v);
		[Version (since = "1.0")]
		public void set_allowconflict (string v);
		[Version (since = "1.0")]
		public void set_attach (ICal.Attach v);
		[Version (since = "1.0")]
		public void set_attendee (string v);
		[Version (since = "2.0")]
		public void set_busytype (ICal.PropertyBusytype v);
		[Version (since = "1.0")]
		public void set_calid (string v);
		[Version (since = "1.0")]
		public void set_calmaster (string v);
		[Version (since = "1.0")]
		public void set_calscale (string v);
		[Version (since = "1.0")]
		public void set_capversion (string v);
		[Version (since = "1.0")]
		public void set_carid (string v);
		[Version (since = "1.0")]
		public void set_carlevel (ICal.PropertyCarlevel v);
		[Version (since = "1.0")]
		public void set_categories (string v);
		[Version (since = "1.0")]
		public void set_class (ICal.Property_Class v);
		[Version (since = "1.0")]
		public void set_cmd (ICal.PropertyCmd v);
		[Version (since = "1.0")]
		public void set_color (string v);
		[Version (since = "1.0")]
		public void set_comment (string v);
		[Version (since = "1.0")]
		public void set_completed (ICal.Time v);
		[Version (since = "1.0")]
		public void set_components (string v);
		[Version (since = "1.0")]
		public void set_contact (string v);
		[Version (since = "1.0")]
		public void set_created (ICal.Time v);
		[Version (since = "1.0")]
		public void set_csid (string v);
		[Version (since = "1.0")]
		public void set_datemax (ICal.Time v);
		[Version (since = "1.0")]
		public void set_datemin (ICal.Time v);
		[Version (since = "1.0")]
		public void set_decreed (string v);
		[Version (since = "1.0")]
		public void set_defaultcharset (string v);
		[Version (since = "1.0")]
		public void set_defaultlocale (string v);
		[Version (since = "1.0")]
		public void set_defaulttzid (string v);
		[Version (since = "1.0")]
		public void set_defaultvcars (string v);
		[Version (since = "1.0")]
		public void set_deny (string v);
		[Version (since = "1.0")]
		public void set_description (string v);
		[Version (since = "1.0")]
		public void set_dtend (ICal.Time v);
		[Version (since = "1.0")]
		public void set_dtstamp (ICal.Time v);
		[Version (since = "1.0")]
		public void set_dtstart (ICal.Time v);
		[Version (since = "1.0")]
		public void set_due (ICal.Time v);
		[Version (since = "1.0")]
		public void set_duration (ICal.Duration v);
		[Version (since = "1.0")]
		public void set_estimatedduration (ICal.Duration v);
		[Version (since = "1.0")]
		public void set_exdate (ICal.Time v);
		[Version (since = "1.0")]
		public void set_expand (int v);
		[Version (since = "1.0")]
		public void set_exrule (ICal.Recurrence v);
		[Version (since = "1.0")]
		public void set_freebusy (ICal.Period v);
		[Version (since = "1.0")]
		public void set_geo (ICal.Geo v);
		[Version (since = "1.0")]
		public void set_grant (string v);
		[Version (since = "1.0")]
		public void set_itipversion (string v);
		[Version (since = "1.0")]
		public void set_lastmodified (ICal.Time v);
		[Version (since = "1.0")]
		public void set_location (string v);
		[Version (since = "1.0")]
		public void set_maxcomponentsize (int v);
		[Version (since = "1.0")]
		public void set_maxdate (ICal.Time v);
		[Version (since = "1.0")]
		public void set_maxresults (int v);
		[Version (since = "1.0")]
		public void set_maxresultssize (int v);
		[Version (since = "1.0")]
		public void set_method (ICal.PropertyMethod v);
		[Version (since = "1.0")]
		public void set_mindate (ICal.Time v);
		[Version (since = "1.0")]
		public void set_multipart (string v);
		[Version (since = "1.0")]
		public void set_name (string v);
		[Version (since = "1.0")]
		public void set_organizer (string v);
		[Version (since = "1.0")]
		public void set_owner (string v);
		[Version (since = "1.0")]
		public void set_parameter (ICal.Parameter parameter);
		[Version (since = "1.0")]
		public void set_parameter_from_string (string name, string value);
		[Version (since = "3.0")]
		public void set_parent (ICal.Component? component);
		[Version (since = "1.0")]
		public void set_percentcomplete (int v);
		[Version (since = "1.0")]
		public void set_permission (string v);
		[Version (since = "1.0")]
		public void set_pollcompletion (ICal.PropertyPollcompletion v);
		[Version (since = "1.0")]
		public void set_pollitemid (int v);
		[Version (since = "1.0")]
		public void set_pollmode (ICal.PropertyPollmode v);
		[Version (since = "1.0")]
		public void set_pollproperties (string v);
		[Version (since = "1.0")]
		public void set_pollwinner (int v);
		[Version (since = "1.0")]
		public void set_priority (int v);
		[Version (since = "1.0")]
		public void set_prodid (string v);
		[Version (since = "1.0")]
		public void set_query (string v);
		[Version (since = "1.0")]
		public void set_queryid (string v);
		[Version (since = "1.0")]
		public void set_querylevel (ICal.PropertyQuerylevel v);
		[Version (since = "1.0")]
		public void set_queryname (string v);
		[Version (since = "1.0")]
		public void set_rdate (ICal.Datetimeperiod v);
		[Version (since = "1.0")]
		public void set_recuraccepted (string v);
		[Version (since = "1.0")]
		public void set_recurexpand (string v);
		[Version (since = "1.0")]
		public void set_recurlimit (string v);
		[Version (since = "1.0")]
		public void set_recurrenceid (ICal.Time v);
		[Version (since = "1.0")]
		public void set_relatedto (string v);
		[Version (since = "1.0")]
		public void set_relcalid (string v);
		[Version (since = "1.0")]
		public void set_repeat (int v);
		[Version (since = "2.0")]
		public void set_replyurl (string v);
		[Version (since = "1.0")]
		public void set_requeststatus (ICal.Reqstat v);
		[Version (since = "1.0")]
		public void set_resources (string v);
		[Version (since = "2.0")]
		public void set_response (int v);
		[Version (since = "1.0")]
		public void set_restriction (string v);
		[Version (since = "1.0")]
		public void set_rrule (ICal.Recurrence v);
		[Version (since = "1.0")]
		public void set_scope (string v);
		[Version (since = "1.0")]
		public void set_sequence (int v);
		[Version (since = "1.0")]
		public void set_status (ICal.PropertyStatus v);
		[Version (since = "1.0")]
		public void set_storesexpanded (string v);
		[Version (since = "1.0")]
		public void set_summary (string v);
		[Version (since = "1.0")]
		public void set_target (string v);
		[Version (since = "2.0")]
		public void set_taskmode (ICal.PropertyTaskmode v);
		[Version (since = "1.0")]
		public void set_transp (ICal.PropertyTransp v);
		[Version (since = "1.0")]
		public void set_trigger (ICal.Trigger v);
		[Version (since = "1.0")]
		public void set_tzid (string v);
		[Version (since = "2.0")]
		public void set_tzidaliasof (string v);
		[Version (since = "1.0")]
		public void set_tzname (string v);
		[Version (since = "1.0")]
		public void set_tzoffsetfrom (int v);
		[Version (since = "1.0")]
		public void set_tzoffsetto (int v);
		[Version (since = "2.0")]
		public void set_tzuntil (ICal.Time v);
		[Version (since = "1.0")]
		public void set_tzurl (string v);
		[Version (since = "1.0")]
		public void set_uid (string v);
		[Version (since = "1.0")]
		public void set_url (string v);
		[Version (since = "1.0")]
		public void set_value (ICal.Value value);
		[Version (since = "1.0")]
		public void set_value_from_string (string value, string kind);
		[Version (since = "1.0")]
		public void set_version (string v);
		[Version (since = "2.0")]
		public void set_voter (string v);
		[Version (since = "1.0")]
		public void set_x (string v);
		[Version (since = "1.0")]
		public void set_x_name (string name);
		[Version (since = "1.0")]
		public void set_xlicclass (ICal.PropertyXlicclass v);
		[Version (since = "1.0")]
		public void set_xlicclustercount (string v);
		[Version (since = "1.0")]
		public void set_xlicerror (string v);
		[Version (since = "1.0")]
		public void set_xlicmimecharset (string v);
		[Version (since = "1.0")]
		public void set_xlicmimecid (string v);
		[Version (since = "1.0")]
		public void set_xlicmimecontenttype (string v);
		[Version (since = "1.0")]
		public void set_xlicmimeencoding (string v);
		[Version (since = "1.0")]
		public void set_xlicmimefilename (string v);
		[Version (since = "1.0")]
		public void set_xlicmimeoptinfo (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.status (ICal.PropertyStatus v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.storesexpanded (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.summary (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.target (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Property.taskmode (ICal.PropertyTaskmode v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.transp (ICal.PropertyTransp v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.trigger (ICal.Trigger v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.tzid (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Property.tzidaliasof (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.tzname (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.tzoffsetfrom (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.tzoffsetto (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Property.tzuntil (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.tzurl (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.uid (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.url (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.version (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Property.voter (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.x (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.xlicclass (ICal.PropertyXlicclass v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.xlicclustercount (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.xlicerror (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.xlicmimecharset (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.xlicmimecid (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.xlicmimecontenttype (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.xlicmimeencoding (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.xlicmimefilename (string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Property.xlicmimeoptinfo (string v);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_recur_iterator_get_type ()")]
	public sealed class RecurIterator : ICal.Object {
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public RecurIterator (ICal.Recurrence rule, ICal.Time dtstart);
		[Version (since = "1.0")]
		public ICal.Time next ();
		[Version (since = "3.0")]
		public int set_start (ICal.Time start);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_recurrence_get_type ()")]
	public sealed class Recurrence : ICal.Object {
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Recurrence ();
		[Version (since = "1.0")]
		public void clear ();
		[Version (since = "1.0")]
		public static ICal.RecurrenceWeekday day_day_of_week (short day);
		[Version (since = "1.0")]
		public static int day_position (short day);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Recurrence.from_string (string str);
		[Version (since = "1.0")]
		public short get_by_day (uint index);
		[Version (since = "1.0")]
		public GLib.Array<short> get_by_day_array ();
		[Version (since = "1.0")]
		public short get_by_hour (uint index);
		[Version (since = "1.0")]
		public GLib.Array<short> get_by_hour_array ();
		[Version (since = "1.0")]
		public short get_by_minute (uint index);
		[Version (since = "1.0")]
		public GLib.Array<short> get_by_minute_array ();
		[Version (since = "1.0")]
		public short get_by_month (uint index);
		[Version (since = "1.0")]
		public GLib.Array<short> get_by_month_array ();
		[Version (since = "1.0")]
		public short get_by_month_day (uint index);
		[Version (since = "1.0")]
		public GLib.Array<short> get_by_month_day_array ();
		[Version (since = "1.0")]
		public short get_by_second (uint index);
		[Version (since = "1.0")]
		public GLib.Array<short> get_by_second_array ();
		[Version (since = "1.0")]
		public short get_by_set_pos (uint index);
		[Version (since = "1.0")]
		public GLib.Array<short> get_by_set_pos_array ();
		[Version (since = "1.0")]
		public short get_by_week_no (uint index);
		[Version (since = "1.0")]
		public GLib.Array<short> get_by_week_no_array ();
		[Version (since = "1.0")]
		public short get_by_year_day (uint index);
		[Version (since = "1.0")]
		public GLib.Array<short> get_by_year_day_array ();
		[Version (since = "1.0")]
		public int get_count ();
		[Version (since = "1.0")]
		public ICal.RecurrenceFrequency get_freq ();
		[Version (since = "1.0")]
		public short get_interval ();
		[Version (since = "1.0")]
		public ICal.Time get_until ();
		[Version (since = "1.0")]
		public ICal.RecurrenceWeekday get_week_start ();
		[Version (since = "2.0")]
		public static bool month_is_leap (short month);
		[Version (since = "2.0")]
		public static int month_month (short month);
		[Version (since = "2.0")]
		public static bool rscale_is_supported ();
		[Version (since = "2.0")]
		public static ICal.Array rscale_supported_calendars ();
		[Version (since = "1.0")]
		public void set_by_day (uint index, short value);
		[Version (since = "1.0")]
		public void set_by_day_array (GLib.Array<short> values);
		[Version (since = "1.0")]
		public void set_by_hour (uint index, short value);
		[Version (since = "1.0")]
		public void set_by_hour_array (GLib.Array<short> values);
		[Version (since = "1.0")]
		public void set_by_minute (uint index, short value);
		[Version (since = "1.0")]
		public void set_by_minute_array (GLib.Array<short> values);
		[Version (since = "1.0")]
		public void set_by_month (uint index, short value);
		[Version (since = "1.0")]
		public void set_by_month_array (GLib.Array<short> values);
		[Version (since = "1.0")]
		public void set_by_month_day (uint index, short value);
		[Version (since = "1.0")]
		public void set_by_month_day_array (GLib.Array<short> values);
		[Version (since = "1.0")]
		public void set_by_second (uint index, short value);
		[Version (since = "1.0")]
		public void set_by_second_array (GLib.Array<short> values);
		[Version (since = "1.0")]
		public void set_by_set_pos (uint index, short value);
		[Version (since = "1.0")]
		public void set_by_set_pos_array (GLib.Array<short> values);
		[Version (since = "1.0")]
		public void set_by_week_no (uint index, short value);
		[Version (since = "1.0")]
		public void set_by_week_no_array (GLib.Array<short> values);
		[Version (since = "1.0")]
		public void set_by_year_day (uint index, short value);
		[Version (since = "1.0")]
		public void set_by_year_day_array (GLib.Array<short> values);
		[Version (since = "1.0")]
		public void set_count (int count);
		[Version (since = "1.0")]
		public void set_freq (ICal.RecurrenceFrequency freq);
		[Version (since = "1.0")]
		public void set_interval (short interval);
		[Version (since = "1.0")]
		public void set_until (ICal.Time until);
		[Version (since = "1.0")]
		public void set_week_start (ICal.RecurrenceWeekday week_start);
		[Version (since = "1.0")]
		public string to_string ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_reqstat_get_type ()")]
	public sealed class Reqstat : ICal.Object {
		[CCode (has_construct_function = false)]
		protected Reqstat ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Reqstat.from_string (string str);
		[Version (since = "1.0")]
		public ICal.RequestStatus get_code ();
		[Version (since = "1.0")]
		public unowned string get_debug ();
		[Version (since = "1.0")]
		public unowned string get_desc ();
		[Version (since = "1.0")]
		public void set_code (ICal.RequestStatus code);
		[Version (since = "1.0")]
		public string to_string ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_time_get_type ()")]
	public sealed class Time : ICal.Object {
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Time ();
		[Version (since = "2.0")]
		public ICal.Time add (ICal.Duration d);
		[Version (since = "1.0")]
		public void adjust (int days, int hours, int minutes, int seconds);
		[Version (since = "1.0")]
		public string as_ical_string ();
		[Version (since = "1.0")]
		public long as_timet ();
		[Version (since = "1.0")]
		public long as_timet_with_zone (ICal.Timezone? zone);
		[Version (since = "1.0")]
		public ICal.Time clone ();
		[Version (since = "1.0")]
		public int compare (ICal.Time b);
		[Version (since = "1.0")]
		public int compare_date_only (ICal.Time b);
		[Version (since = "1.0")]
		public int compare_date_only_tz (ICal.Time b, ICal.Timezone? zone);
		[Version (since = "1.0")]
		public void convert_timezone (ICal.Timezone? from_zone, ICal.Timezone? to_zone);
		[Version (since = "1.0")]
		public ICal.Time convert_to_zone (ICal.Timezone? zone);
		[Version (since = "3.0.5")]
		public void convert_to_zone_inplace (ICal.Timezone? zone);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Time.current_with_zone (ICal.Timezone? zone);
		[Version (since = "1.0")]
		public int day_of_week ();
		[Version (since = "1.0")]
		public int day_of_year ();
		[Version (since = "1.0")]
		public static int days_in_month (int month, int year);
		[Version (since = "2.0")]
		public static int days_in_year (int year);
		[Version (since = "1.0")]
		public static bool days_is_leap_year (int year);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Time.from_day_of_year (int day, int year);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Time.from_string (string str);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Time.from_timet_with_zone (long v, int is_date, ICal.Timezone? zone);
		[Version (since = "1.0")]
		public void get_date (out int year, out int month, out int day);
		[Version (since = "1.0")]
		public int get_day ();
		[Version (since = "1.0")]
		public int get_hour ();
		[Version (since = "1.0")]
		public int get_minute ();
		[Version (since = "1.0")]
		public int get_month ();
		[Version (since = "1.0")]
		public int get_second ();
		[Version (since = "1.0")]
		public void get_time (out int hour, out int minute, out int second);
		[Version (since = "1.0")]
		public unowned ICal.Timezone get_timezone ();
		[Version (since = "1.0")]
		public unowned string? get_tzid ();
		[Version (since = "1.0")]
		public int get_year ();
		[Version (since = "1.0")]
		public bool is_date ();
		[Version (since = "1.0")]
		public bool is_daylight ();
		[Version (since = "1.0")]
		public bool is_null_time ();
		[Version (since = "1.0")]
		public bool is_utc ();
		[Version (since = "1.0")]
		public bool is_valid_time ();
		[Version (since = "1.0")]
		public ICal.Time normalize ();
		[Version (since = "3.0.5")]
		public void normalize_inplace ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Time.null_date ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Time.null_time ();
		[Version (since = "1.0")]
		public void set_date (int year, int month, int day);
		[Version (since = "1.0")]
		public void set_day (int day);
		[Version (since = "1.0")]
		public void set_hour (int hour);
		[Version (since = "1.0")]
		public void set_is_date (bool is_date);
		[Version (since = "1.0")]
		public void set_is_daylight (bool is_daylight);
		[Version (since = "1.0")]
		public void set_minute (int minute);
		[Version (since = "1.0")]
		public void set_month (int month);
		[Version (since = "1.0")]
		public void set_second (int second);
		[Version (since = "1.0")]
		public void set_time (int hour, int minute, int second);
		[Version (since = "1.0")]
		public void set_timezone (ICal.Timezone? zone);
		[Version (since = "1.0")]
		public void set_year (int year);
		[Version (since = "1.0")]
		public int start_doy_week (int fdow);
		[Version (since = "2.0")]
		public ICal.Duration subtract (ICal.Time t2);
		[Version (since = "2.0")]
		public static void timezone_expand_vtimezone (ICal.Component comp, int end_year, ICal.Array changes);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Time.today ();
		[Version (since = "1.0")]
		public int week_number ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_time_span_get_type ()")]
	public sealed class TimeSpan : ICal.Object {
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public TimeSpan (ICal.Time dtstart, ICal.Time dtend, int is_busy);
		[Version (since = "3.0.5")]
		public ICal.TimeSpan clone ();
		[Version (since = "1.0")]
		public int contains (ICal.TimeSpan container);
		[Version (since = "1.0")]
		public long get_end ();
		[Version (since = "1.0")]
		public bool get_is_busy ();
		[Version (since = "1.0")]
		public long get_start ();
		[Version (since = "1.0")]
		public int overlaps (ICal.TimeSpan s2);
		[Version (since = "1.0")]
		public void set_end (long end);
		[Version (since = "1.0")]
		public void set_is_busy (bool is_busy);
		[Version (since = "1.0")]
		public void set_start (long start);
		[CCode (has_construct_function = false)]
		[Version (since = "3.0.5")]
		public TimeSpan.timet (long start, long end, bool is_busy);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_timezone_get_type ()")]
	public sealed class Timezone : ICal.Object {
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Timezone ();
		[Version (since = "1.0")]
		public ICal.Timezone copy ();
		[Version (since = "1.0")]
		public int dump_changes (int max_year, [CCode (type = "FILE*")] GLib.FileStream fp);
		[Version (since = "1.0")]
		public static void free_builtin_timezones ();
		[Version (since = "1.0")]
		public static void free_zone_directory ();
		[Version (since = "1.0")]
		public static unowned ICal.Timezone? get_builtin_timezone (string? location);
		[Version (since = "1.0")]
		public static unowned ICal.Timezone get_builtin_timezone_from_offset (int offset, string? tzname);
		[Version (since = "1.0")]
		public static unowned ICal.Timezone get_builtin_timezone_from_tzid (string? tzid);
		[Version (since = "1.0")]
		public static unowned ICal.Array get_builtin_timezones ();
		[Version (since = "2.0")]
		public static bool get_builtin_tzdata ();
		[Version (since = "1.0")]
		public ICal.Component get_component ();
		[Version (since = "1.0")]
		public unowned string get_display_name ();
		[Version (since = "1.0")]
		public double get_latitude ();
		[Version (since = "1.0")]
		public unowned string? get_location ();
		[Version (since = "2.0")]
		public static string get_location_from_vtimezone (ICal.Component component);
		[Version (since = "1.0")]
		public double get_longitude ();
		[Version (since = "1.0")]
		public unowned string? get_tzid ();
		[Version (since = "1.0")]
		public unowned string? get_tznames ();
		[Version (since = "2.0")]
		public static string get_tznames_from_vtimezone (ICal.Component component);
		[Version (since = "1.0")]
		public int get_utc_offset (ICal.Time? tt, out int is_daylight);
		[Version (since = "1.0")]
		public int get_utc_offset_of_utc_time (ICal.Time tt, out int is_daylight);
		[Version (since = "1.0")]
		public static unowned ICal.Timezone get_utc_timezone ();
		[Version (since = "3.0.17")]
		public static unowned string get_zone_directory ();
		[Version (since = "1.0")]
		public static void release_zone_tab ();
		[Version (since = "2.0")]
		public static void set_builtin_tzdata (bool @set);
		[Version (since = "1.0")]
		public int set_component (ICal.Component comp);
		[Version (since = "1.0")]
		public static void set_tzid_prefix (string new_prefix);
		[Version (since = "1.0")]
		public static void set_zone_directory (string path);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_trigger_get_type ()")]
	public sealed class Trigger : ICal.Object {
		[CCode (has_construct_function = false)]
		protected Trigger ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Trigger.from_int (int reltime);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Trigger.from_string (string str);
		[Version (since = "1.0")]
		public ICal.Duration get_duration ();
		[Version (since = "1.0")]
		public ICal.Time get_time ();
		[Version (since = "1.0")]
		public bool is_bad_trigger ();
		[Version (since = "1.0")]
		public bool is_null_trigger ();
		[Version (since = "1.0")]
		public void set_duration (ICal.Duration duration);
		[Version (since = "1.0")]
		public void set_time (ICal.Time time);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", type_id = "i_cal_value_get_type ()")]
	public sealed class Value : ICal.Object {
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value (ICal.ValueKind kind);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.action (ICal.PropertyAction v);
		[Version (since = "1.0")]
		public global::string as_ical_string ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.attach (ICal.Attach v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.binary (global::string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.boolean (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Value.busytype (ICal.PropertyBusytype v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.caladdress (global::string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.carlevel (ICal.PropertyCarlevel v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.@class (ICal.Property_Class v);
		[Version (since = "1.0")]
		public ICal.Value clone ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.cmd (ICal.PropertyCmd v);
		[Version (since = "1.0")]
		public ICal.ParameterXliccomparetype compare (ICal.Value b);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.date (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.datetime (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "3.0")]
		public Value.datetimedate (ICal.Time v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.datetimeperiod (ICal.Datetimeperiod v);
		[Version (since = "1.0")]
		public static global::string? decode_ical_string (global::string szText);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.duration (ICal.Duration v);
		[Version (since = "1.0")]
		public static global::string? encode_ical_string (global::string szText);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.float (double v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.from_string (ICal.ValueKind kind, global::string str);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.geo (ICal.Geo v);
		[Version (since = "1.0")]
		public ICal.PropertyAction get_action ();
		[Version (since = "1.0")]
		public unowned ICal.Attach? get_attach ();
		[Version (since = "1.0")]
		public unowned global::string? get_binary ();
		[Version (since = "1.0")]
		public int get_boolean ();
		[Version (since = "2.0")]
		public ICal.PropertyBusytype get_busytype ();
		[Version (since = "1.0")]
		public unowned global::string? get_caladdress ();
		[Version (since = "1.0")]
		public ICal.PropertyCarlevel get_carlevel ();
		[Version (since = "1.0")]
		public ICal.Property_Class get_class ();
		[Version (since = "1.0")]
		public ICal.PropertyCmd get_cmd ();
		[Version (since = "1.0")]
		public ICal.Time? get_date ();
		[Version (since = "1.0")]
		public ICal.Time? get_datetime ();
		[Version (since = "3.0")]
		public ICal.Time? get_datetimedate ();
		[Version (since = "1.0")]
		public ICal.Datetimeperiod? get_datetimeperiod ();
		[Version (since = "1.0")]
		public ICal.Duration? get_duration ();
		[Version (since = "1.0")]
		public double get_float ();
		[Version (since = "1.0")]
		public ICal.Geo? get_geo ();
		[Version (since = "1.0")]
		public int get_integer ();
		[Version (since = "1.0")]
		public ICal.PropertyMethod get_method ();
		[Version (since = "3.0")]
		public ICal.Property? get_parent ();
		[Version (since = "1.0")]
		public ICal.Period? get_period ();
		[Version (since = "2.0")]
		public ICal.PropertyPollcompletion get_pollcompletion ();
		[Version (since = "2.0")]
		public ICal.PropertyPollmode get_pollmode ();
		[Version (since = "1.0")]
		public unowned global::string? get_query ();
		[Version (since = "1.0")]
		public ICal.PropertyQuerylevel get_querylevel ();
		[Version (since = "1.0")]
		public ICal.Recurrence? get_recur ();
		[Version (since = "1.0")]
		public ICal.Reqstat? get_requeststatus ();
		[Version (since = "1.0")]
		public ICal.PropertyStatus get_status ();
		[Version (since = "1.0")]
		public unowned global::string? get_string ();
		[Version (since = "2.0")]
		public ICal.PropertyTaskmode get_taskmode ();
		[Version (since = "1.0")]
		public unowned global::string? get_text ();
		[Version (since = "1.0")]
		public ICal.PropertyTransp get_transp ();
		[Version (since = "1.0")]
		public ICal.Trigger? get_trigger ();
		[Version (since = "1.0")]
		public unowned global::string? get_uri ();
		[Version (since = "1.0")]
		public int get_utcoffset ();
		[Version (since = "1.0")]
		public unowned global::string? get_x ();
		[Version (since = "1.0")]
		public ICal.PropertyXlicclass get_xlicclass ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.integer (int v);
		[Version (since = "1.0")]
		public bool is_valid ();
		[Version (since = "1.0")]
		public ICal.ValueKind isa ();
		[Version (since = "1.0")]
		public int isa_value ();
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.method (ICal.PropertyMethod v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.period (ICal.Period v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Value.pollcompletion (ICal.PropertyPollcompletion v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Value.pollmode (ICal.PropertyPollmode v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.query (global::string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.querylevel (ICal.PropertyQuerylevel v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.recur (ICal.Recurrence v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.requeststatus (ICal.Reqstat v);
		[Version (since = "1.0")]
		public void reset_kind ();
		[Version (since = "1.0")]
		public void set_action (ICal.PropertyAction v);
		[Version (since = "1.0")]
		public void set_attach (ICal.Attach v);
		[Version (since = "1.0")]
		public void set_binary (global::string v);
		[Version (since = "1.0")]
		public void set_boolean (int v);
		[Version (since = "2.0")]
		public void set_busytype (ICal.PropertyBusytype v);
		[Version (since = "1.0")]
		public void set_caladdress (global::string v);
		[Version (since = "1.0")]
		public void set_carlevel (ICal.PropertyCarlevel v);
		[Version (since = "1.0")]
		public void set_class (ICal.Property_Class v);
		[Version (since = "1.0")]
		public void set_cmd (ICal.PropertyCmd v);
		[Version (since = "1.0")]
		public void set_date (ICal.Time v);
		[Version (since = "1.0")]
		public void set_datetime (ICal.Time v);
		[Version (since = "3.0")]
		public void set_datetimedate (ICal.Time v);
		[Version (since = "1.0")]
		public void set_datetimeperiod (ICal.Datetimeperiod v);
		[Version (since = "1.0")]
		public void set_duration (ICal.Duration v);
		[Version (since = "1.0")]
		public void set_float (double v);
		[Version (since = "1.0")]
		public void set_geo (ICal.Geo v);
		[Version (since = "1.0")]
		public void set_integer (int v);
		[Version (since = "1.0")]
		public void set_method (ICal.PropertyMethod v);
		[Version (since = "2.0")]
		public void set_parent (ICal.Property? property);
		[Version (since = "1.0")]
		public void set_period (ICal.Period v);
		[Version (since = "2.0")]
		public void set_pollcompletion (ICal.PropertyPollcompletion v);
		[Version (since = "2.0")]
		public void set_pollmode (ICal.PropertyPollmode v);
		[Version (since = "1.0")]
		public void set_query (global::string v);
		[Version (since = "1.0")]
		public void set_querylevel (ICal.PropertyQuerylevel v);
		[Version (since = "1.0")]
		public void set_recur (ICal.Recurrence v);
		[Version (since = "1.0")]
		public void set_requeststatus (ICal.Reqstat v);
		[Version (since = "1.0")]
		public void set_status (ICal.PropertyStatus v);
		[Version (since = "1.0")]
		public void set_string (global::string v);
		[Version (since = "2.0")]
		public void set_taskmode (ICal.PropertyTaskmode v);
		[Version (since = "1.0")]
		public void set_text (global::string v);
		[Version (since = "1.0")]
		public void set_transp (ICal.PropertyTransp v);
		[Version (since = "1.0")]
		public void set_trigger (ICal.Trigger v);
		[Version (since = "1.0")]
		public void set_uri (global::string v);
		[Version (since = "1.0")]
		public void set_utcoffset (int v);
		[Version (since = "1.0")]
		public void set_x (global::string v);
		[Version (since = "1.0")]
		public void set_xlicclass (ICal.PropertyXlicclass v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.status (ICal.PropertyStatus v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.string (global::string v);
		[CCode (has_construct_function = false)]
		[Version (since = "2.0")]
		public Value.taskmode (ICal.PropertyTaskmode v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.text (global::string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.transp (ICal.PropertyTransp v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.trigger (ICal.Trigger v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.uri (global::string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.utcoffset (int v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.x (global::string v);
		[CCode (has_construct_function = false)]
		[Version (since = "1.0")]
		public Value.xlicclass (ICal.PropertyXlicclass v);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_", has_type_id = false)]
	public enum ComponentKind {
		NO_COMPONENT,
		ANY_COMPONENT,
		XROOT_COMPONENT,
		XATTACH_COMPONENT,
		VEVENT_COMPONENT,
		VTODO_COMPONENT,
		VJOURNAL_COMPONENT,
		VCALENDAR_COMPONENT,
		VAGENDA_COMPONENT,
		VFREEBUSY_COMPONENT,
		VALARM_COMPONENT,
		XAUDIOALARM_COMPONENT,
		XDISPLAYALARM_COMPONENT,
		XEMAILALARM_COMPONENT,
		XPROCEDUREALARM_COMPONENT,
		VTIMEZONE_COMPONENT,
		XSTANDARD_COMPONENT,
		XDAYLIGHT_COMPONENT,
		X_COMPONENT,
		VSCHEDULE_COMPONENT,
		VQUERY_COMPONENT,
		VREPLY_COMPONENT,
		VCAR_COMPONENT,
		VCOMMAND_COMPONENT,
		XLICINVALID_COMPONENT,
		XLICMIMEPART_COMPONENT,
		VAVAILABILITY_COMPONENT,
		XAVAILABLE_COMPONENT,
		VPOLL_COMPONENT,
		VVOTER_COMPONENT,
		XVOTE_COMPONENT;
		[Version (since = "1.0")]
		public static ICal.ComponentKind from_string (string string);
		[Version (since = "1.0")]
		public bool is_valid ();
		[Version (since = "1.0")]
		public unowned string to_string ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cname = "ICalErrorEnum", cprefix = "I_CAL_", has_type_id = false)]
	[GIR (name = "ErrorEnum")]
	public enum Error {
		NO_ERROR,
		BADARG_ERROR,
		NEWFAILED_ERROR,
		ALLOCATION_ERROR,
		MALFORMEDDATA_ERROR,
		PARSE_ERROR,
		INTERNAL_ERROR,
		FILE_ERROR,
		USAGE_ERROR,
		UNIMPLEMENTED_ERROR,
		UNKNOWN_ERROR;
		[Version (since = "1.0")]
		public static void clear_errno ();
		[Version (since = "1.0")]
		public static void crash_here ();
		[Version (since = "1.0")]
		public ICal.ErrorState get_error_state ();
		[Version (since = "1.0")]
		public static unowned string perror ();
		[Version (since = "1.0")]
		public static void restore (string error, ICal.ErrorState es);
		[Version (since = "1.0")]
		public void set_errno ();
		[Version (since = "1.0")]
		public void set_error_state (ICal.ErrorState state);
		[Version (since = "1.0")]
		public static void stop_here ();
		[Version (since = "1.0")]
		public unowned string strerror ();
		[Version (since = "1.0")]
		public static ICal.ErrorState supress (string error);
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_ERROR_", has_type_id = false)]
	public enum ErrorState {
		FATAL,
		NONFATAL,
		DEFAULT,
		UNKNOWN
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_ACTIONPARAM_", has_type_id = false)]
	public enum ParameterAction {
		X,
		ASK,
		ABORT,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_CUTYPE_", has_type_id = false)]
	public enum ParameterCutype {
		X,
		INDIVIDUAL,
		GROUP,
		RESOURCE,
		ROOM,
		UNKNOWN,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_DISPLAY_", has_type_id = false)]
	public enum ParameterDisplay {
		X,
		BADGE,
		GRAPHIC,
		FULLSIZE,
		THUMBNAIL,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_ENABLE_", has_type_id = false)]
	public enum ParameterEnable {
		X,
		TRUE,
		FALSE,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_ENCODING_", has_type_id = false)]
	public enum ParameterEncoding {
		X,
		@8BIT,
		BASE64,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_FBTYPE_", has_type_id = false)]
	public enum ParameterFbtype {
		X,
		FREE,
		BUSY,
		BUSYUNAVAILABLE,
		BUSYTENTATIVE,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_FEATURE_", has_type_id = false)]
	public enum ParameterFeature {
		X,
		AUDIO,
		CHAT,
		FEED,
		MODERATOR,
		PHONE,
		SCREEN,
		VIDEO,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_", has_type_id = false)]
	public enum ParameterKind {
		ANY_PARAMETER,
		ACTIONPARAM_PARAMETER,
		ALTREP_PARAMETER,
		CHARSET_PARAMETER,
		CN_PARAMETER,
		CUTYPE_PARAMETER,
		DELEGATEDFROM_PARAMETER,
		DELEGATEDTO_PARAMETER,
		DIR_PARAMETER,
		DISPLAY_PARAMETER,
		EMAIL_PARAMETER,
		ENABLE_PARAMETER,
		ENCODING_PARAMETER,
		FBTYPE_PARAMETER,
		FEATURE_PARAMETER,
		FILENAME_PARAMETER,
		FMTTYPE_PARAMETER,
		IANA_PARAMETER,
		ID_PARAMETER,
		LABEL_PARAMETER,
		LANGUAGE_PARAMETER,
		LATENCY_PARAMETER,
		LOCAL_PARAMETER,
		LOCALIZE_PARAMETER,
		MANAGEDID_PARAMETER,
		MEMBER_PARAMETER,
		MODIFIED_PARAMETER,
		OPTIONS_PARAMETER,
		PARTSTAT_PARAMETER,
		PATCHACTION_PARAMETER,
		PUBLICCOMMENT_PARAMETER,
		RANGE_PARAMETER,
		REASON_PARAMETER,
		RELATED_PARAMETER,
		RELTYPE_PARAMETER,
		REQUIRED_PARAMETER,
		RESPONSE_PARAMETER,
		ROLE_PARAMETER,
		RSVP_PARAMETER,
		SCHEDULEAGENT_PARAMETER,
		SCHEDULEFORCESEND_PARAMETER,
		SCHEDULESTATUS_PARAMETER,
		SENTBY_PARAMETER,
		SIZE_PARAMETER,
		STAYINFORMED_PARAMETER,
		SUBSTATE_PARAMETER,
		TZID_PARAMETER,
		VALUE_PARAMETER,
		X_PARAMETER,
		XLICCOMPARETYPE_PARAMETER,
		XLICERRORTYPE_PARAMETER,
		NO_PARAMETER;
		[Version (since = "1.0")]
		public static ICal.ParameterKind from_string (string string);
		[Version (since = "3.0.5")]
		public bool is_valid ();
		[Version (since = "1.0")]
		public unowned string to_string ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_LOCAL_", has_type_id = false)]
	public enum ParameterLocal {
		X,
		TRUE,
		FALSE,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_PARTSTAT_", has_type_id = false)]
	public enum ParameterPartstat {
		X,
		NEEDSACTION,
		ACCEPTED,
		DECLINED,
		TENTATIVE,
		DELEGATED,
		COMPLETED,
		INPROCESS,
		FAILED,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_PATCHACTION_", has_type_id = false)]
	public enum ParameterPatchaction {
		X,
		CREATE,
		BYNAME,
		BYVALUE,
		BYPARAM,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_RANGE_", has_type_id = false)]
	public enum ParameterRange {
		X,
		THISANDPRIOR,
		THISANDFUTURE,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_RELATED_", has_type_id = false)]
	public enum ParameterRelated {
		X,
		START,
		END,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_RELTYPE_", has_type_id = false)]
	public enum ParameterReltype {
		X,
		PARENT,
		CHILD,
		SIBLING,
		POLL,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_REQUIRED_", has_type_id = false)]
	public enum ParameterRequired {
		X,
		TRUE,
		FALSE,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_ROLE_", has_type_id = false)]
	public enum ParameterRole {
		X,
		CHAIR,
		REQPARTICIPANT,
		OPTPARTICIPANT,
		NONPARTICIPANT,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_RSVP_", has_type_id = false)]
	public enum ParameterRsvp {
		X,
		TRUE,
		FALSE,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_SCHEDULEAGENT_", has_type_id = false)]
	public enum ParameterScheduleagent {
		X,
		SERVER,
		CLIENT,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_SCHEDULEFORCESEND_", has_type_id = false)]
	public enum ParameterScheduleforcesend {
		X,
		REQUEST,
		REPLY,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_STAYINFORMED_", has_type_id = false)]
	public enum ParameterStayinformed {
		X,
		TRUE,
		FALSE,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_SUBSTATE_", has_type_id = false)]
	public enum ParameterSubstate {
		X,
		OK,
		ERROR,
		SUSPENDED,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_VALUE_", has_type_id = false)]
	public enum ParameterValue {
		X,
		BINARY,
		BOOLEAN,
		DATE,
		DURATION,
		FLOAT,
		INTEGER,
		PERIOD,
		RECUR,
		TEXT,
		URI,
		ERROR,
		DATETIME,
		UTCOFFSET,
		CALADDRESS,
		NONE;
		[Version (since = "1.0")]
		public ICal.ValueKind to_value_kind ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_XLICCOMPARETYPE_", has_type_id = false)]
	public enum ParameterXliccomparetype {
		X,
		EQUAL,
		NOTEQUAL,
		LESS,
		GREATER,
		LESSEQUAL,
		GREATEREQUAL,
		REGEX,
		ISNULL,
		ISNOTNULL,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_XLICERRORTYPE_", has_type_id = false)]
	public enum ParameterXlicerrortype {
		X,
		COMPONENTPARSEERROR,
		PROPERTYPARSEERROR,
		PARAMETERNAMEPARSEERROR,
		PARAMETERVALUEPARSEERROR,
		VALUEPARSEERROR,
		INVALIDITIP,
		UNKNOWNVCALPROPERROR,
		MIMEPARSEERROR,
		VCALPROPPARSEERROR,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_PARSER_", has_type_id = false)]
	public enum ParserState {
		ERROR,
		SUCCESS,
		BEGIN_COMP,
		END_COMP,
		IN_PROGRESS
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_ACTION_", has_type_id = false)]
	public enum PropertyAction {
		X,
		AUDIO,
		DISPLAY,
		EMAIL,
		PROCEDURE,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_BUSYTYPE_", has_type_id = false)]
	public enum PropertyBusytype {
		X,
		BUSY,
		BUSYUNAVAILABLE,
		BUSYTENTATIVE,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_CARLEVEL_", has_type_id = false)]
	public enum PropertyCarlevel {
		X,
		CARNONE,
		CARMIN,
		CARFULL1,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_CMD_", has_type_id = false)]
	public enum PropertyCmd {
		X,
		ABORT,
		CONTINUE,
		CREATE,
		DELETE,
		GENERATEUID,
		GETCAPABILITY,
		IDENTIFY,
		MODIFY,
		MOVE,
		REPLY,
		SEARCH,
		SETLOCALE,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_", has_type_id = false)]
	public enum PropertyKind {
		ANY_PROPERTY,
		ACCEPTRESPONSE_PROPERTY,
		ACKNOWLEDGED_PROPERTY,
		ACTION_PROPERTY,
		ALLOWCONFLICT_PROPERTY,
		ATTACH_PROPERTY,
		ATTENDEE_PROPERTY,
		BUSYTYPE_PROPERTY,
		CALID_PROPERTY,
		CALMASTER_PROPERTY,
		CALSCALE_PROPERTY,
		CAPVERSION_PROPERTY,
		CARLEVEL_PROPERTY,
		CARID_PROPERTY,
		CATEGORIES_PROPERTY,
		CLASS_PROPERTY,
		CMD_PROPERTY,
		COLOR_PROPERTY,
		COMMENT_PROPERTY,
		COMPLETED_PROPERTY,
		COMPONENTS_PROPERTY,
		CONTACT_PROPERTY,
		CREATED_PROPERTY,
		CSID_PROPERTY,
		DATEMAX_PROPERTY,
		DATEMIN_PROPERTY,
		DECREED_PROPERTY,
		DEFAULTCHARSET_PROPERTY,
		DEFAULTLOCALE_PROPERTY,
		DEFAULTTZID_PROPERTY,
		DEFAULTVCARS_PROPERTY,
		DENY_PROPERTY,
		DESCRIPTION_PROPERTY,
		DTEND_PROPERTY,
		DTSTAMP_PROPERTY,
		DTSTART_PROPERTY,
		DUE_PROPERTY,
		DURATION_PROPERTY,
		ESTIMATEDDURATION_PROPERTY,
		EXDATE_PROPERTY,
		EXPAND_PROPERTY,
		EXRULE_PROPERTY,
		FREEBUSY_PROPERTY,
		GEO_PROPERTY,
		GRANT_PROPERTY,
		ITIPVERSION_PROPERTY,
		LASTMODIFIED_PROPERTY,
		LOCATION_PROPERTY,
		MAXCOMPONENTSIZE_PROPERTY,
		MAXDATE_PROPERTY,
		MAXRESULTS_PROPERTY,
		MAXRESULTSSIZE_PROPERTY,
		METHOD_PROPERTY,
		MINDATE_PROPERTY,
		MULTIPART_PROPERTY,
		NAME_PROPERTY,
		ORGANIZER_PROPERTY,
		OWNER_PROPERTY,
		PERCENTCOMPLETE_PROPERTY,
		PERMISSION_PROPERTY,
		POLLCOMPLETION_PROPERTY,
		POLLITEMID_PROPERTY,
		POLLMODE_PROPERTY,
		POLLPROPERTIES_PROPERTY,
		POLLWINNER_PROPERTY,
		PRIORITY_PROPERTY,
		PRODID_PROPERTY,
		QUERY_PROPERTY,
		QUERYLEVEL_PROPERTY,
		QUERYID_PROPERTY,
		QUERYNAME_PROPERTY,
		RDATE_PROPERTY,
		RECURACCEPTED_PROPERTY,
		RECUREXPAND_PROPERTY,
		RECURLIMIT_PROPERTY,
		RECURRENCEID_PROPERTY,
		RELATEDTO_PROPERTY,
		RELCALID_PROPERTY,
		REPEAT_PROPERTY,
		REPLYURL_PROPERTY,
		REQUESTSTATUS_PROPERTY,
		RESOURCES_PROPERTY,
		RESPONSE_PROPERTY,
		RESTRICTION_PROPERTY,
		RRULE_PROPERTY,
		SCOPE_PROPERTY,
		SEQUENCE_PROPERTY,
		STATUS_PROPERTY,
		STORESEXPANDED_PROPERTY,
		SUMMARY_PROPERTY,
		TARGET_PROPERTY,
		TASKMODE_PROPERTY,
		TRANSP_PROPERTY,
		TRIGGER_PROPERTY,
		TZID_PROPERTY,
		TZIDALIASOF_PROPERTY,
		TZNAME_PROPERTY,
		TZOFFSETFROM_PROPERTY,
		TZOFFSETTO_PROPERTY,
		TZUNTIL_PROPERTY,
		TZURL_PROPERTY,
		UID_PROPERTY,
		URL_PROPERTY,
		VERSION_PROPERTY,
		VOTER_PROPERTY,
		X_PROPERTY,
		XLICCLASS_PROPERTY,
		XLICCLUSTERCOUNT_PROPERTY,
		XLICERROR_PROPERTY,
		XLICMIMECHARSET_PROPERTY,
		XLICMIMECID_PROPERTY,
		XLICMIMECONTENTTYPE_PROPERTY,
		XLICMIMEENCODING_PROPERTY,
		XLICMIMEFILENAME_PROPERTY,
		XLICMIMEOPTINFO_PROPERTY,
		NO_PROPERTY;
		[Version (since = "1.0")]
		public static ICal.PropertyKind from_string (string string);
		[Version (since = "1.0")]
		public int has_property (int e);
		[Version (since = "1.0")]
		public bool is_valid ();
		[Version (since = "1.0")]
		public unowned string to_string ();
		[Version (since = "1.0")]
		public ICal.ValueKind to_value_kind ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_METHOD_", has_type_id = false)]
	public enum PropertyMethod {
		X,
		PUBLISH,
		REQUEST,
		REPLY,
		ADD,
		CANCEL,
		REFRESH,
		COUNTER,
		DECLINECOUNTER,
		CREATE,
		READ,
		RESPONSE,
		MOVE,
		MODIFY,
		GENERATEUID,
		DELETE,
		NONE;
		[Version (since = "1.0")]
		public static ICal.PropertyMethod from_string (string str);
		[Version (since = "1.0")]
		public unowned string to_string ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_POLLCOMPLETION_", has_type_id = false)]
	public enum PropertyPollcompletion {
		X,
		SERVER,
		SERVERSUBMIT,
		SERVERCHOICE,
		CLIENT,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_POLLMODE_", has_type_id = false)]
	public enum PropertyPollmode {
		X,
		BASIC,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_QUERYLEVEL_", has_type_id = false)]
	public enum PropertyQuerylevel {
		X,
		CALQL1,
		CALQLNONE,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_STATUS_", has_type_id = false)]
	public enum PropertyStatus {
		X,
		TENTATIVE,
		CONFIRMED,
		COMPLETED,
		NEEDSACTION,
		CANCELLED,
		INPROCESS,
		DRAFT,
		FINAL,
		SUBMITTED,
		PENDING,
		FAILED,
		DELETED,
		NONE;
		[Version (since = "1.0")]
		public static ICal.PropertyStatus from_string (string str);
		[Version (since = "1.0")]
		public unowned string to_string ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_TASKMODE_", has_type_id = false)]
	public enum PropertyTaskmode {
		X,
		AUTOMATICCOMPLETION,
		AUTOMATICFAILURE,
		AUTOMATICSTATUS,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_TRANSP_", has_type_id = false)]
	public enum PropertyTransp {
		X,
		OPAQUE,
		OPAQUENOCONFLICT,
		TRANSPARENT,
		TRANSPARENTNOCONFLICT,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_XLICCLASS_", has_type_id = false)]
	public enum PropertyXlicclass {
		X,
		PUBLISHNEW,
		PUBLISHUPDATE,
		PUBLISHFREEBUSY,
		REQUESTNEW,
		REQUESTUPDATE,
		REQUESTRESCHEDULE,
		REQUESTDELEGATE,
		REQUESTNEWORGANIZER,
		REQUESTFORWARD,
		REQUESTSTATUS,
		REQUESTFREEBUSY,
		REPLYACCEPT,
		REPLYDECLINE,
		REPLYDELEGATE,
		REPLYCRASHERACCEPT,
		REPLYCRASHERDECLINE,
		ADDINSTANCE,
		CANCELEVENT,
		CANCELINSTANCE,
		CANCELALL,
		REFRESH,
		COUNTER,
		DECLINECOUNTER,
		MALFORMED,
		OBSOLETE,
		MISSEQUENCED,
		UNKNOWN,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_CLASS_", has_type_id = false)]
	public enum Property_Class {
		X,
		PUBLIC,
		PRIVATE,
		CONFIDENTIAL,
		NONE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_RECURRENCE_ARRAY_", has_type_id = false)]
	public enum RecurrenceArrayMaxValues {
		[CCode (cname = "I_CAL_RECURRENCE_ARRAY_MAX")]
		RECURRENCE_ARRAY_MAX
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_BY_", has_type_id = false)]
	public enum RecurrenceArraySizes {
		SECOND_SIZE,
		MINUTE_SIZE,
		HOUR_SIZE,
		MONTH_SIZE,
		MONTHDAY_SIZE,
		WEEKNO_SIZE,
		YEARDAY_SIZE,
		SETPOS_SIZE,
		DAY_SIZE
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_", has_type_id = false)]
	public enum RecurrenceFrequency {
		SECONDLY_RECURRENCE,
		MINUTELY_RECURRENCE,
		HOURLY_RECURRENCE,
		DAILY_RECURRENCE,
		WEEKLY_RECURRENCE,
		MONTHLY_RECURRENCE,
		YEARLY_RECURRENCE,
		NO_RECURRENCE;
		[Version (since = "2.0")]
		public static ICal.RecurrenceFrequency from_string (string str);
		[Version (since = "2.0")]
		public unowned string to_string ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_SKIP_", has_type_id = false)]
	public enum RecurrenceSkip {
		BACKWARD,
		FORWARD,
		OMIT,
		UNDEFINED;
		[Version (since = "2.0")]
		public static ICal.RecurrenceSkip from_string (string str);
		[Version (since = "2.0")]
		public unowned string to_string ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_", has_type_id = false)]
	public enum RecurrenceWeekday {
		NO_WEEKDAY,
		SUNDAY_WEEKDAY,
		MONDAY_WEEKDAY,
		TUESDAY_WEEKDAY,
		WEDNESDAY_WEEKDAY,
		THURSDAY_WEEKDAY,
		FRIDAY_WEEKDAY,
		SATURDAY_WEEKDAY;
		[Version (since = "1.0")]
		public static ICal.RecurrenceWeekday from_string (string str);
		[Version (since = "2.0")]
		public unowned string to_string ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_", has_type_id = false)]
	public enum RequestStatus {
		UNKNOWN_STATUS,
		@2_0_SUCCESS_STATUS,
		@2_1_FALLBACK_STATUS,
		@2_2_IGPROP_STATUS,
		@2_3_IGPARAM_STATUS,
		@2_4_IGXPROP_STATUS,
		@2_5_IGXPARAM_STATUS,
		@2_6_IGCOMP_STATUS,
		@2_7_FORWARD_STATUS,
		@2_8_ONEEVENT_STATUS,
		@2_9_TRUNC_STATUS,
		@2_10_ONETODO_STATUS,
		@2_11_TRUNCRRULE_STATUS,
		@3_0_INVPROPNAME_STATUS,
		@3_1_INVPROPVAL_STATUS,
		@3_2_INVPARAM_STATUS,
		@3_3_INVPARAMVAL_STATUS,
		@3_4_INVCOMP_STATUS,
		@3_5_INVTIME_STATUS,
		@3_6_INVRULE_STATUS,
		@3_7_INVCU_STATUS,
		@3_8_NOAUTH_STATUS,
		@3_9_BADVERSION_STATUS,
		@3_10_TOOBIG_STATUS,
		@3_11_MISSREQCOMP_STATUS,
		@3_12_UNKCOMP_STATUS,
		@3_13_BADCOMP_STATUS,
		@3_14_NOCAP_STATUS,
		@3_15_INVCOMMAND,
		@4_0_BUSY_STATUS,
		@4_1_STORE_ACCESS_DENIED,
		@4_2_STORE_FAILED,
		@4_3_STORE_NOT_FOUND,
		@5_0_MAYBE_STATUS,
		@5_1_UNAVAIL_STATUS,
		@5_2_NOSERVICE_STATUS,
		@5_3_NOSCHED_STATUS,
		@6_1_CONTAINER_NOT_FOUND,
		@9_0_UNRECOGNIZED_COMMAND;
		[Version (since = "1.0")]
		public string code ();
		[Version (since = "1.0")]
		public unowned string desc ();
		[Version (since = "1.0")]
		public static ICal.RequestStatus from_num (short major, short minor);
		[Version (since = "1.0")]
		public short major ();
		[Version (since = "1.0")]
		public short minor ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_RESTRICTION_", has_type_id = false)]
	public enum RestrictionKind {
		NONE,
		ZERO,
		ONE,
		ZEROPLUS,
		ONEPLUS,
		ZEROORONE,
		ONEEXCLUSIVE,
		ONEMUTUAL,
		UNKNOWN
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_", has_type_id = false)]
	public enum Unknowntokenhandling {
		ASSUME_IANA_TOKEN,
		DISCARD_TOKEN,
		TREAT_AS_ERROR
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", cprefix = "I_CAL_", has_type_id = false)]
	public enum ValueKind {
		ANY_VALUE,
		ACTION_VALUE,
		ATTACH_VALUE,
		BINARY_VALUE,
		BOOLEAN_VALUE,
		BUSYTYPE_VALUE,
		CALADDRESS_VALUE,
		CARLEVEL_VALUE,
		CLASS_VALUE,
		CMD_VALUE,
		DATE_VALUE,
		DATETIME_VALUE,
		DATETIMEDATE_VALUE,
		DATETIMEPERIOD_VALUE,
		DURATION_VALUE,
		FLOAT_VALUE,
		GEO_VALUE,
		INTEGER_VALUE,
		METHOD_VALUE,
		PERIOD_VALUE,
		POLLCOMPLETION_VALUE,
		POLLMODE_VALUE,
		QUERY_VALUE,
		QUERYLEVEL_VALUE,
		RECUR_VALUE,
		REQUESTSTATUS_VALUE,
		STATUS_VALUE,
		STRING_VALUE,
		TASKMODE_VALUE,
		TEXT_VALUE,
		TRANSP_VALUE,
		TRIGGER_VALUE,
		URI_VALUE,
		UTCOFFSET_VALUE,
		X_VALUE,
		XLICCLASS_VALUE,
		NO_VALUE;
		[Version (since = "1.0")]
		public static ICal.ValueKind from_string (string str);
		[Version (since = "1.0")]
		public bool is_valid ();
		[Version (since = "1.0")]
		public ICal.PropertyKind to_property_kind ();
		[Version (since = "1.0")]
		public unowned string to_string ();
	}
	[CCode (cheader_filename = "libical-glib/libical-glib.h", instance_pos = 2.9)]
	public delegate void ComponentForeachRecurrenceFunc (ICal.Component comp, ICal.TimeSpan span);
	[CCode (cheader_filename = "libical-glib/libical-glib.h", instance_pos = 1.9)]
	public delegate void ComponentForeachTZIDFunc (ICal.Parameter param);
	[CCode (cheader_filename = "libical-glib/libical-glib.h", instance_pos = 1.9)]
	public delegate string MimeParseFunc ([CCode (array_length_cname = "size", array_length_pos = 1.1, array_length_type = "gsize")] char[] bytes);
	[CCode (cheader_filename = "libical-glib/libical-glib.h", instance_pos = 1.9)]
	public delegate string ParserLineGenFunc ([CCode (array_length_cname = "size", array_length_pos = 1.1, array_length_type = "gsize")] char[] bytes);
	[CCode (cheader_filename = "libical-glib/libical-glib.h")]
	[Version (since = "1.0")]
	public static void bt ();
	[CCode (cheader_filename = "libical-glib/libical-glib.h")]
	[Version (since = "1.0")]
	public static ICal.Error errno_return ();
	[CCode (cheader_filename = "libical-glib/libical-glib.h")]
	[Version (since = "1.0")]
	public static ICal.Unknowntokenhandling get_unknown_token_handling_setting ();
	[CCode (cheader_filename = "libical-glib/libical-glib.h")]
	[Version (since = "1.0")]
	public static ICal.Component mime_parse (ICal.MimeParseFunc func);
	[CCode (cheader_filename = "libical-glib/libical-glib.h")]
	[Version (since = "1.0")]
	public static GLib.Array<long> recur_expand_recurrence (string rule, long start, int count);
	[CCode (cheader_filename = "libical-glib/libical-glib.h")]
	[Version (since = "1.0")]
	public static int restriction_check (ICal.Component comp);
	[CCode (cheader_filename = "libical-glib/libical-glib.h")]
	[Version (since = "1.0")]
	public static int restriction_compare (ICal.RestrictionKind restr, int count);
	[CCode (cheader_filename = "libical-glib/libical-glib.h")]
	[Version (since = "1.0")]
	public static void set_unknown_token_handling_setting (ICal.Unknowntokenhandling newSetting);
}
